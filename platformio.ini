; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32RootServer, esp32Control, esp8266RootServer, esp8266Chassis
src_dir = .

[env]
monitor_speed = 115200
build_flags =
	-D SERIAL_SPEED=115200
monitor_filters = time
lib_deps =
	TaskScheduler
	ArduinoJson
	painlessmesh/painlessMesh

[env:esp8266]
platform = espressif8266
board = esp12e
framework = arduino
build_flags =
	${env.build_flags}
	-D HELLO_WORLD
lib_deps =
	${env.lib_deps}
	ottowinter/ESPAsyncTCP-esphome

[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino
build_flags =
	${env.build_flags}
	-D HELLO_WORLD
lib_deps =
	${env.lib_deps}
	ottowinter/AsyncTCP-esphome

[env:esp8266RootServer]
platform = espressif8266
board = d1_mini
framework = arduino
upload_port = COM7
monitor_port = COM7
build_flags =
	${env.build_flags}
	-D IS_MESH_ROOT
	-D OTA_ROLE='"rootserver"'
	-D WITH_RTC_DS1307
	-D WITH_SD_CARD
	-D CHIP_SELECT=D8
	-D HAS_WEB_SERVER
	-D UNIQUE_HOSTNAME='"RobonetRoot"'
	-D HAS_OTA_SERVER
lib_deps =
	${env.lib_deps}
	ottowinter/ESPAsyncTCP-esphome
	ottowinter/ESPAsyncWebServer-esphome
	adafruit/RTClib

[env:esp32RootServer]
platform = espressif32
board = featheresp32
framework = arduino
upload_port = COM12
monitor_port = COM12
build_flags =
	${env.build_flags}
	-D IS_MESH_ROOT
	-D OTA_ROLE='"rootserver"'
	-D WITH_RTC_PCF8523
	-D WITH_SD_CARD
	-D CHIP_SELECT=33
	-D HAS_WEB_SERVER
	-D UNIQUE_HOSTNAME='"RobonetRoot"'
	-D HAS_OTA_SERVER
lib_deps =
	${env.lib_deps}
	ottowinter/AsyncTCP-esphome
	ottowinter/ESPAsyncWebServer-esphome
	adafruit/RTClib

[env:esp8266Chassis]
platform = espressif8266
board = d1_mini
framework = arduino
upload_port = COM6
monitor_port = COM6
build_flags =
	${env.build_flags}
	-D OTA_ROLE='"diffdrive"'
	-D WITH_D1MINI_MOTOR_SHIELD
	-D HAS_CHASSIS
	-D IS_DIFF_DRIVE
lib_deps =
	${env.lib_deps}
	ottowinter/ESPAsyncTCP-esphome

[env:esp32Control]
platform = espressif32
board = esp32dev
framework = arduino
upload_port = COM4
monitor_port = COM4
build_flags =
	${env.build_flags}
	-D OTA_ROLE='"control"'
	-D HAS_CONTROL
	-D DRIVE_NODE=2731577066
lib_deps =
	${env.lib_deps}
	ottowinter/AsyncTCP-esphome
